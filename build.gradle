plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.0'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'com.netflix.dgs.codegen' version '6.1.5'
    id 'jacoco'
}

group = 'net.decodex.loghub'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '21'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
//	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-hateoas'
    implementation "org.springframework.boot:spring-boot-starter-reactor-netty"
    implementation 'org.springframework.boot:spring-boot-starter-graphql'
//    implementation 'org.springframework.boot:spring-boot-starter-data-elasticsearch'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.session:spring-session-core'
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'com.querydsl:querydsl-apt:5.1.0:morphia'
    implementation('com.querydsl:querydsl-mongodb:5.1.0') {
        exclude group: 'org.mongodb', module: 'mongo-java-driver'
    }
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.4.0'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-api:2.4.0'
    implementation 'io.jsonwebtoken:jjwt-api:0.12.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.12.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.12.5'
    implementation 'com.mailjet:mailjet-client:5.2.5'
    implementation 'com.jlefebure:spring-boot-starter-minio:1.4'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework:spring-webflux'
    testImplementation 'org.springframework.graphql:spring-graphql-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.springframework.boot:spring-boot-testcontainers'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:mongodb'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
    annotationProcessor 'com.querydsl:querydsl-apt:5.1.0:general'
}

test {
    finalizedBy jacocoTestReport // report is always generated after tests run
}
jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
    reports {
        xml.required = true
        html.required = true
    }
}

test {
    useJUnitPlatform()
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 1
            }
        }
    }
}

generateJava {
    schemaPaths = ["${projectDir}/src/main/resources/graphql-client"]
    packageName = 'net.decodex.loghub.backend.codegen'
    generateClient = true
}


